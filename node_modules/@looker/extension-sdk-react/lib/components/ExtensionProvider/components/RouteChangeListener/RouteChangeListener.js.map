{"version":3,"sources":["../../../../../src/components/ExtensionProvider/components/RouteChangeListener/RouteChangeListener.tsx"],"names":["RouteChangeListener","onPathnameChange","extensionHost","location","React","useEffect","pathname","clientRouteChanged","search"],"mappings":";;;;;;;;;AAAA;;AACA;;AAIO,IAAMA,mBAAuD,GAAG,SAA1DA,mBAA0D,OAAyC;AAAA,MAAtCC,gBAAsC,QAAtCA,gBAAsC;AAAA,MAApBC,aAAoB,QAApBA,aAAoB;AAC9G,MAAIC,QAAQ,GAAG,kCAAf;;AACAC,oBAAMC,SAAN,CAAgB,YAAM;AACpB,QAAIJ,gBAAJ,EAAsB;AACpBA,MAAAA,gBAAgB,CAACE,QAAQ,CAACG,QAAV,CAAhB;AACD;;AACD;AAAEJ,IAAAA,aAAD,CAAoCK,kBAApC,CAAuDJ,QAAQ,CAACG,QAAT,GAAoBH,QAAQ,CAACK,MAApF;AACF,GALD,EAKG,CAACL,QAAD,CALH;;AAMA,SAAO,iEAAP;AACD,CATM","sourcesContent":["import React from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { RouteChangeListenerProps } from './types'\nimport { ExtensionHostApi } from '@looker/extension-sdk'\n\nexport const RouteChangeListener: React.FC<RouteChangeListenerProps> = ({ onPathnameChange, extensionHost }) => {\n  let location = useLocation()\n  React.useEffect(() => {\n    if (onPathnameChange) {\n      onPathnameChange(location.pathname)\n    }\n    ;(extensionHost as ExtensionHostApi).clientRouteChanged(location.pathname + location.search)\n  }, [location])\n  return <></>\n}\n"],"file":"RouteChangeListener.js"}