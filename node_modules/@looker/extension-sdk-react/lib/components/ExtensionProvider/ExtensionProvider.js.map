{"version":3,"sources":["../../../src/components/ExtensionProvider/ExtensionProvider.tsx"],"names":["ExtensionContext","React","createContext","undefined","initializingMessage","initializeFailedMessage","createTempExtensionHostApi","errorMessage","invokeCoreSdkByName","Error","invokeCoreSdkByPath","verifyHostConnection","handleNotification","clientRouteChanged","updateTitle","updateLocation","openBrowserWindow","closeHostPopovers","ExtensionProvider","onPathnameChange","hostTracksRoute","loadingComponent","requiredLookerVersion","children","initialRoute","setInitialRoute","hostInitializedTimerId","initializing","setInitializing","useState","extensionSDK","coreSDK","extensionData","setExtensionData","initialized","window","clearTimeout","current","previousState","initializeError","useEffect","setTimeout","console","error","initializedCallback","then","extensionHost","LookerExtensionSDK","createClient","message","onBodyMousedown","body","document","querySelector","addEventListener","removeEventListener","initialEntries","ExportWrapper"],"mappings":"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","sourcesContent":["/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2019 Looker Data Sciences, Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport React, { useState, useRef } from 'react'\nimport { MemoryRouter } from 'react-router-dom'\nimport { LookerExtensionSDK, connectExtensionHost, ExtensionHostApi } from '@looker/extension-sdk'\nimport { LookerSDK } from '@looker/sdk/dist/sdk/methods'\nimport { ExtensionProviderProps, ExtensionContextData } from './types'\nimport { RouteChangeListener } from './components/RouteChangeListener'\n\nexport { LookerSDK }\n\n/**\n * React context provider for extension API and SDK\n */\nexport const ExtensionContext = React.createContext<ExtensionContextData>(\n  undefined as any // no one will ever see this undefined!\n)\n\nconst initializingMessage = 'Establishing communication with Looker host'\nconst initializeFailedMessage = 'Failed to establish communication with Looker host'\n\n/**\n * The ExtensionContextData interface requires that there is an ExtensionHostApi.\n * Now that error handling has been added, the ExtensionHostApi is no longer\n * always available. Provide a dummy implementation.\n */\nconst createTempExtensionHostApi = (errorMessage: string): ExtensionHostApi => ({\n  invokeCoreSdkByName: () => {\n    throw new Error(errorMessage)\n  },\n  invokeCoreSdkByPath: () => {\n    throw new Error(errorMessage)\n  },\n  verifyHostConnection: () => {\n    throw new Error(errorMessage)\n  },\n  handleNotification: () => {},\n  clientRouteChanged: () => {},\n  updateTitle: () => {},\n  updateLocation: () => {},\n  openBrowserWindow: () => {},\n  closeHostPopovers: () => {}\n})\n\n/**\n * ExtensionProvider component. Provides access to the extension API and SDK (use\n * ExtensionContext) and react routing services.\n */\nexport const ExtensionProvider: React.FC<ExtensionProviderProps> = ({\n  onPathnameChange,\n  hostTracksRoute = true,\n  loadingComponent,\n  requiredLookerVersion,\n  children\n}) => {\n  const [initialRoute, setInitialRoute] = useState()\n  const hostInitializedTimerId = useRef(0)\n  const [initializing, setInitializing] = useState(true)\n  const [extensionData, setExtensionData] = React.useState<ExtensionContextData>({\n    extensionSDK: createTempExtensionHostApi(initializingMessage),\n    coreSDK: {} as LookerSDK\n  })\n\n  const initialized = (errorMessage?: string) => {\n    window.clearTimeout(hostInitializedTimerId.current)\n    setInitializing(false)\n    if (errorMessage) {\n      setExtensionData((previousState: ExtensionContextData) => {\n        return {\n          ...previousState,\n          initializeError: errorMessage\n        }\n      })\n    }\n  }\n\n  React.useEffect(() => {\n    hostInitializedTimerId.current = window.setTimeout(() => {\n      console.error('Failed to establish host connection')\n      setInitializing(false)\n      setExtensionData((previousState: ExtensionContextData) => {\n        return {\n          ...previousState,\n          initializeError: initializeFailedMessage,\n          extensionSDK: createTempExtensionHostApi(initializeFailedMessage)\n        }\n      })\n    }, 10000)\n    connectExtensionHost({\n      initializedCallback: initialized,\n      setInitialRoute: hostTracksRoute ? setInitialRoute : undefined,\n      requiredLookerVersion\n    })\n      .then((extensionHost) => {\n        setExtensionData((previousState: ExtensionContextData) => {\n          return {\n            ...previousState,\n            extensionSDK: extensionHost,\n            coreSDK: LookerExtensionSDK.createClient(extensionHost)\n          }\n        })\n      })\n      .catch((error) => {\n        console.error(error)\n        window.clearTimeout(hostInitializedTimerId.current)\n        setInitializing(false)\n        setExtensionData((previousState: ExtensionContextData) => {\n          return {\n            ...previousState,\n            initializeError: error.message ? error.message : initializeFailedMessage,\n            extensionSDK: createTempExtensionHostApi(initializeFailedMessage)\n          }\n        })\n      })\n  }, [])\n\n  React.useEffect(() => {\n    const onBodyMousedown = () => {\n      if (extensionData && extensionData.extensionSDK) {\n        extensionData.extensionSDK.closeHostPopovers()\n      }\n    }\n    let body: HTMLBodyElement | undefined | null\n    if (!initializing) {\n      body = document.querySelector('body')\n      if (body) {\n        body.addEventListener('mousedown', onBodyMousedown)\n      }\n    }\n    return () => {\n      if (body) {\n        body.removeEventListener('mousedown', onBodyMousedown)\n      }\n    }\n  }, [initializing])\n\n  const initialEntries: string[] | undefined = initialRoute ? [initialRoute] : undefined\n\n  return (\n    <>\n      {initializing && loadingComponent}\n      {hostTracksRoute && !initializing && (\n        <MemoryRouter initialEntries={initialEntries}>\n          <RouteChangeListener onPathnameChange={onPathnameChange} extensionHost={extensionData!.extensionSDK} />\n          <ExtensionContext.Provider value={extensionData!}>{children}</ExtensionContext.Provider>\n        </MemoryRouter>\n      )}\n      {!hostTracksRoute && !initializing && (\n        <ExtensionContext.Provider value={extensionData!}>{children}</ExtensionContext.Provider>\n      )}\n    </>\n  )\n}\n\n/**\n * @deprecated use ExtensionProvider instead\n */\nexport const ExportWrapper = ExtensionProvider\n"],"file":"ExtensionProvider.js"}