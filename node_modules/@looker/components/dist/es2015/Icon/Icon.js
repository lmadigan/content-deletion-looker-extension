import { color, layout, reset, space, } from '@looker/design-tokens';
import React, { forwardRef } from 'react';
import styled from 'styled-components';
import { Glyphs } from '@looker/icons';
import omit from 'lodash/omit';
const IconFactory = forwardRef((props, ref) => {
    const Glyph = Glyphs[props.name];
    return (React.createElement(Styled, Object.assign({ ref: ref }, omit(props, 'name')),
        React.createElement(Glyph, { width: "100%", height: "100%", fill: "currentColor" })));
});
IconFactory.displayName = 'IconFactory';
const Styled = styled.div.withConfig({ displayName: "Styled", componentId: "sc-1rq5u7z" }) `
  ${reset}
  ${color}
  ${space}
  ${layout}

  width: ${props => props.width};
  height: ${props => props.height};
  align-items: center;
  display: inline-flex;
`;
Styled.defaultProps = { size: '1rem' };
export const Icon = styled(IconFactory).withConfig({ displayName: "Icon", componentId: "sc-1079d6u" }) ``;
//# sourceMappingURL=Icon.js.map