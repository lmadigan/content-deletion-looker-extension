import { useEffect } from 'react';
export function useScrollLock(allowScrollWithin, disabled = false) {
    useEffect(() => {
        let scrollTop = window.scrollY;
        let scrollTarget = document;
        function stopScroll(e) {
            if (e.target !== null && e.target !== scrollTarget) {
                scrollTarget = e.target;
                scrollTop =
                    scrollTarget instanceof Element
                        ? scrollTarget.scrollTop
                        : window.scrollY;
            }
            if (scrollTarget instanceof Element &&
                !(allowScrollWithin &&
                    allowScrollWithin.current &&
                    allowScrollWithin.current.contains(scrollTarget))) {
                scrollTarget.scrollTop = scrollTop;
            }
            else if (scrollTarget === document) {
                window.scrollTo({ top: scrollTop });
            }
        }
        if (disabled) {
            window.removeEventListener('scroll', stopScroll, true);
        }
        else {
            window.addEventListener('scroll', stopScroll, true);
        }
        return () => {
            window.removeEventListener('scroll', stopScroll, true);
        };
    }, [disabled, allowScrollWithin]);
}
//# sourceMappingURL=useScrollLock.js.map