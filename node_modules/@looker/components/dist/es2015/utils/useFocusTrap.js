import createFocusTrap from 'focus-trap';
import { useRef, useCallback } from 'react';
export function useFocusTrap(enabled = true, escapeDeactivates = false, clickOutsideDeactivates = true) {
    const trap = useRef();
    return useCallback(node => {
        if (!node || !enabled) {
            trap.current && trap.current.deactivate();
        }
        else if (node && enabled) {
            const autoFocusElement = node.querySelector('[data-autofocus="true"]');
            trap.current = createFocusTrap(node, Object.assign({ clickOutsideDeactivates,
                escapeDeactivates, fallbackFocus: node }, (autoFocusElement ? { initialFocus: autoFocusElement } : {})));
            trap.current.activate();
        }
    }, [enabled, escapeDeactivates, clickOutsideDeactivates]);
}
//# sourceMappingURL=useFocusTrap.js.map