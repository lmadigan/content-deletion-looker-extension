var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React from 'react';
import styled from 'styled-components';
import { space } from 'styled-system';
export const ModalFooter = (_a) => {
    var { children, secondary } = _a, props = __rest(_a, ["children", "secondary"]);
    return (React.createElement(Layout, Object.assign({}, props),
        React.createElement(SpaceChildren, null, children),
        secondary && React.createElement(SpaceChildren, { mr: "auto" }, secondary)));
};
const Layout = styled.footer.withConfig({ displayName: "Layout", componentId: "sc-hz70vn" }) `
  align-items: center;
  display: flex;
  flex-direction: row-reverse;
  padding: ${props => props.theme.space.large}
    calc(${p => p.theme.space.xlarge} - ${p => p.theme.space.xsmall});
  /**
    * Subtract margin placed on children from the horizontal padding applied to the component
    * so that the content is properly aligned.
    * padding is: vertical: large, horizontal: calc(xlarge - xsmall)
    **/
`;
const SpaceChildren = styled.div.withConfig({ displayName: "SpaceChildren", componentId: "sc-11dt1aa" }) `
  ${space};
  display: flex;
  flex-direction: row-reverse;

  & > * {
    margin-right: ${props => props.theme.space.xsmall};
    margin-left: ${props => props.theme.space.xsmall};
  }
`;
//# sourceMappingURL=ModalFooter.js.map