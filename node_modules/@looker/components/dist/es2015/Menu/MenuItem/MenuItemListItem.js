import omit from 'lodash/omit';
import { color, space, typography, } from '@looker/design-tokens';
import React, { forwardRef } from 'react';
import styled, { css } from 'styled-components';
import { Icon } from '../../Icon';
const hoverStyles = (props) => {
    if (props.current)
        return false;
    return css `
    &:hover {
      background: ${props.itemStyle.hover.bg};
      color: ${props.itemStyle.hover.color};
      font-size: ${props.itemStyle.hover.color};
      font-weight: ${props.itemStyle.hover.color};

      ${Icon} {
        color: ${props.itemStyle.hover.iconColor};
      }
    }
  `;
};
const iconColor = (props) => props.current
    ? props.itemStyle.current.iconColor
    : props.itemStyle.initial.iconColor;
const Li = forwardRef((props, ref) => {
    const domProps = omit(props, 'current', 'itemStyle');
    return React.createElement("li", Object.assign({}, domProps, { ref: ref }));
});
Li.displayName = 'Li';
export const MenuItemListItem = styled(Li).withConfig({ displayName: "MenuItemListItem", componentId: "sc-t4lwjd" }) `
  ${color}
  ${space}
  ${typography}
  align-items: center;
  display: flex;
  flex-wrap: wrap;
  text-decoration: none;
  transition: ${props => `background ${props.theme.transitions.durationQuick} ${props.theme.easings.ease},
    color ${props.theme.transitions.durationQuick} ${props.theme.easings.ease}`};

  button,
  a {
    border-left-width: ${({ itemStyle }) => itemStyle.marker.size}px;
    border-left-style: solid;
    border-left-color: ${({ itemStyle, current }) => current ? itemStyle.marker.color : 'transparent'};
    padding-left: calc(${({ theme, itemStyle }) => `${theme.space.medium} - ${itemStyle.marker.size}px`});
  }

  &:focus-within button,
  &:focus-within a {
    box-shadow:  ${props => `0 0 3px 1px ${props.theme.colors.palette.blue400}`};
  }

  ${hoverStyles};

  ${Icon} {
    color: ${iconColor};
    transition: color
      ${props => `${props.theme.transitions.durationQuick} ${props.theme.easings.ease}`};
  }
`;
//# sourceMappingURL=MenuItemListItem.js.map