import omit from 'lodash/omit';
import pick from 'lodash/pick';
import React, { forwardRef } from 'react';
import styled from 'styled-components';
import { reset, space } from '@looker/design-tokens';
import { inputPropKeys, } from '../InputProps';
import { inputColor } from '../style';
const FauxRadio = styled.div.withConfig({ displayName: "FauxRadio", componentId: "sc-15kpzlk" }) `
  ${reset}
  position: relative;
  width: 100%;
  height: 100%;
  border: ${props => `solid 1px ${props.theme.colors.palette.charcoal200}`};
  border-radius: 50%;
  color: transparent;
  transition: background-color 25ms linear, border-color 25ms linear,
    box-shadow 25ms linear;
`;
const dotSize = 6;
const RadioContainer = styled.div.withConfig({ displayName: "RadioContainer", componentId: "sc-1ongfoa" }) `
  ${reset}
  position: relative;
  display: inline-block;
  width: 1rem;
  height: 1rem;
  margin: 3px;
  vertical-align: middle;
  input[type='radio'] {
    opacity: 0;
    position: absolute;
    width: 100%;
    height: 100%;
    z-index: 1;
  }
  ${FauxRadio} {
    background: ${props => props.theme.colors.palette.white};
  }
  input[type='radio']:checked {
    & + ${FauxRadio} {
      ${inputColor}
    }
    & + ${FauxRadio}::after {
      content: '';
      position: absolute;
      background: #fff;
      width: ${dotSize}px;
      height: ${dotSize}px;
      border-radius: 50%;
      top: calc(50% - ${dotSize / 2}px);
      right: calc(50% - ${dotSize / 2}px);
    }
  }
  input[type='radio']:focus {
    & + ${FauxRadio} {
      box-shadow: ${props => `0 0 .5px 1px ${props.theme.colors.semanticColors.primary.borderColor}`};
    }
  }
  input[type='radio']:disabled {
    & + ${FauxRadio} {
      opacity: 0.5;
    }
  }
  ${space}
`;
const RadioInput = styled.input.attrs({ type: 'radio' }).withConfig({ displayName: "RadioInput", componentId: "sc-163n3nc" }) `
  ${reset}
`;
const RadioComponent = forwardRef((props, ref) => {
    return (React.createElement(RadioContainer, Object.assign({}, omit(props, inputPropKeys)),
        React.createElement(RadioInput, Object.assign({}, pick(props, inputPropKeys), { ref: ref })),
        React.createElement(FauxRadio, null)));
});
RadioComponent.displayName = 'RadioComponent';
export const Radio = styled(RadioComponent).withConfig({ displayName: "Radio", componentId: "sc-khatgs" }) ``;
//# sourceMappingURL=Radio.js.map