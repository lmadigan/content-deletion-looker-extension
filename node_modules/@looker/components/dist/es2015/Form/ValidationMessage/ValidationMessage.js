var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React, { forwardRef } from 'react';
import { layout, reset, space, typography, } from '@looker/design-tokens';
import styled from 'styled-components';
export const CustomizableValidationMessageAttributes = {
    fontSize: 'xsmall',
};
const ValidationMessageBase = styled.div.attrs((props) => ({
    fontSize: props.fontSize || CustomizableValidationMessageAttributes.fontSize,
})).withConfig({ displayName: "ValidationMessageBase", componentId: "sc-1mkorjc" }) `
  ${reset}
  ${props => props.type === 'error'
    ? `color: ${props.theme.colors.palette.red700};`
    : ''}
  ${layout}
  ${space}
  ${typography}
`;
export const ValidationMessage = forwardRef((_a, ref) => {
    var { message } = _a, props = __rest(_a, ["message"]);
    return (React.createElement(ValidationMessageBase, Object.assign({ mr: "xsmall", mt: "xsmall" }, props, { ref: ref }), message));
});
ValidationMessage.displayName = 'ValidationMessage';
//# sourceMappingURL=ValidationMessage.js.map