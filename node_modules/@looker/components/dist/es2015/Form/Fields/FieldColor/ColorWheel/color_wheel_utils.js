import range from 'lodash/range';
import { cartesian2polar, deg2rad, diameter, polar2cartesian, rad2deg, scaleRadius, translateDiagonal, } from './math_utils';
export const white = () => ({
    brightness: 1,
    coord: { angle: 0, radius: 0 },
});
export const hsv2polar = (color) => ({
    angle: deg2rad(color.h),
    radius: color.s,
});
export const polarbrightness2hsv = (pb) => ({
    h: rad2deg(pb.coord.angle),
    s: pb.coord.radius,
    v: pb.brightness,
});
export const scalePBRadius = (by, pb) => (Object.assign(Object.assign({}, pb), { coord: scaleRadius(by, pb.coord) }));
export const cartesian2hsv = (brightness, radius, coord) => [coord]
    .map(c => translateDiagonal(-radius, c))
    .map(cartesian2polar)
    .map(c => (c.radius <= radius ? { brightness, coord: c } : white()))
    .map(pb => scalePBRadius(1 / radius, pb))
    .map(polarbrightness2hsv)[0];
export const hsv2cartesian = (radius, color) => [color]
    .map(hsv2polar)
    .map(coord => scaleRadius(radius, coord))
    .map(polar2cartesian)
    .map(coord => translateDiagonal(radius, coord))[0];
export const generateColorWheel = (radius, brightness) => range(diameter(radius)).map((_, x) => range(diameter(radius)).map((_$, y) => cartesian2hsv(brightness, radius, { x, y })));
//# sourceMappingURL=color_wheel_utils.js.map