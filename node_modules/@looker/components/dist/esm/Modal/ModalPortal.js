var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
import React, { useEffect, useRef } from 'react';
import { createPortal } from 'react-dom';
import styled from 'styled-components';
import { useScrollLock } from '../utils/useScrollLock';
import { CustomizableModalAttributes } from './Modal';
import { getModalRoot } from './modalRoot';
export var ModalPortal = function (_a) {
    var portalRef = _a.portalRef, children = _a.children;
    var el = useRef(document.createElement('div'));
    var ref = useRef(null);
    var refToUse = portalRef || ref;
    useScrollLock(refToUse);
    useEffect(function () {
        var modalRoot = getModalRoot();
        if (!modalRoot)
            return;
        var elCurrent = el.current;
        modalRoot.appendChild(elCurrent);
        return function () {
            modalRoot.removeChild(elCurrent);
        };
    }, [el]);
    var content = (React.createElement(InvisiBox, { ref: refToUse, zIndex: CustomizableModalAttributes.zIndex }, children));
    return createPortal(content, el.current);
};
var InvisiBox = styled.div.withConfig({ displayName: "InvisiBox", componentId: "sc-1ali4oo" })(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  top: 0;\n\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  pointer-events: none;\n  z-index: ", ";\n\n  * {\n    pointer-events: auto;\n  }\n"], ["\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  top: 0;\n\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  pointer-events: none;\n  z-index: ", ";\n\n  * {\n    pointer-events: auto;\n  }\n"])), function (props) { return props.zIndex; });
var templateObject_1;
//# sourceMappingURL=ModalPortal.js.map