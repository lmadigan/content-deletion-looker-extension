var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
import styled, { css } from 'styled-components';
import { rem } from 'polished';
import { Icon } from '../Icon';
export var iconMargins = function (props) {
    var spacing = { large: 0, small: 0 };
    switch (props.size) {
        case 'xsmall':
            spacing.small = 2;
            spacing.large = 4;
            break;
        case 'small':
        case 'large':
        default:
            spacing.small = 4;
            spacing.large = 8;
    }
    if (props.iconBefore) {
        return css(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n      margin-left: -", ";\n      margin-right: ", ";\n    "], ["\n      margin-left: -", ";\n      margin-right: ", ";\n    "])), rem(spacing.small), rem(spacing.large));
    }
    else if (props.iconAfter) {
        return css(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n      margin-left: ", ";\n      margin-right: -", ";\n    "], ["\n      margin-left: ", ";\n      margin-right: -", ";\n    "])), rem(spacing.large), rem(spacing.small));
    }
    else {
        return false;
    }
};
export var ButtonIcon = styled(Icon).withConfig({ displayName: "ButtonIcon", componentId: "sc-ndnkmo" })(templateObject_3 || (templateObject_3 = __makeTemplateObject([""], [""])));
export var buttonIcon = function (props) { return css(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n  ", " {\n    ", ";\n  }\n"], ["\n  ", " {\n    ", ";\n  }\n"])), ButtonIcon, iconMargins(props)); };
var templateObject_1, templateObject_2, templateObject_3, templateObject_4;
//# sourceMappingURL=icon.js.map