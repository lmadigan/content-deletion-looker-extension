var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { color, layout, reset, space, } from '@looker/design-tokens';
import React, { forwardRef } from 'react';
import styled from 'styled-components';
import { Glyphs } from '@looker/icons';
import omit from 'lodash/omit';
var IconFactory = forwardRef(function (props, ref) {
    var Glyph = Glyphs[props.name];
    return (React.createElement(Styled, __assign({ ref: ref }, omit(props, 'name')),
        React.createElement(Glyph, { width: "100%", height: "100%", fill: "currentColor" })));
});
IconFactory.displayName = 'IconFactory';
var Styled = styled.div.withConfig({ displayName: "Styled", componentId: "sc-1rq5u7z" })(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  ", "\n  ", "\n  ", "\n  ", "\n\n  width: ", ";\n  height: ", ";\n  align-items: center;\n  display: inline-flex;\n"], ["\n  ", "\n  ", "\n  ", "\n  ", "\n\n  width: ", ";\n  height: ", ";\n  align-items: center;\n  display: inline-flex;\n"])), reset, color, space, layout, function (props) { return props.width; }, function (props) { return props.height; });
Styled.defaultProps = { size: '1rem' };
export var Icon = styled(IconFactory).withConfig({ displayName: "Icon", componentId: "sc-1079d6u" })(templateObject_2 || (templateObject_2 = __makeTemplateObject([""], [""])));
var templateObject_1, templateObject_2;
//# sourceMappingURL=Icon.js.map