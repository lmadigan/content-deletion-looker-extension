var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
import { border, color, position, reset, space, } from '@looker/design-tokens';
import styled from 'styled-components';
import { variant } from 'styled-system';
var appearanceVariant = variant({
    prop: 'appearance',
    variants: {
        dark: {
            bg: 'palette.charcoal400',
        },
        default: {
            bg: 'palette.charcoal300',
        },
        light: {
            bg: 'palette.charcoal200',
        },
        onDark: {
            bg: 'palette.charcoal500',
        },
    },
});
export var Divider = styled.hr.attrs(function (props) { return ({
    bg: props.customColor,
}); }).withConfig({ displayName: "Divider", componentId: "sc-1hvv94c" })(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  ", "\n  ", "\n  ", "\n  ", "\n\n  height: ", ";\n  ", "\n"], ["\n  ", "\n  ", "\n  ", "\n  ", "\n\n  height: ", ";\n  ", "\n"])), reset, position, border, space, function (props) { return props.size; }, function (props) { return (props.customColor ? color : appearanceVariant); });
Divider.defaultProps = { appearance: 'default', size: '1px' };
var templateObject_1;
//# sourceMappingURL=Divider.js.map