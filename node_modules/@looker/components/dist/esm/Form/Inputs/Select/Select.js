var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React, { forwardRef } from 'react';
import styled from 'styled-components';
import { border, layout, reset, space, typography, } from '@looker/design-tokens';
var renderOptions = function (options) {
    return options.map(function (option) { return (React.createElement("option", { key: option.value, value: option.value }, option.label)); });
};
var renderOptGroups = function (optionGroups) {
    return optionGroups.map(function (option) {
        return (React.createElement("optgroup", { key: option.key, label: option.key }, renderOptions(option.options)));
    });
};
export var CustomizableSelectAttributes = {
    borderRadius: 'medium',
    fontSize: 'small',
    height: '28px',
    px: 'xsmall',
    py: 'none',
};
var SelectComponent = forwardRef(function (_a, ref) {
    var _b = _a.includeBlank, includeBlank = _b === void 0 ? true : _b, options = _a.options, placeholder = _a.placeholder, propsDefault = _a.defaultValue, value = _a.value, props = __rest(_a, ["includeBlank", "options", "placeholder", "defaultValue", "value"]);
    var defaultValue = propsDefault || (value && !props.onChange) ? value : undefined;
    var optionElements = !options || options.length === 0
        ? null
        : Object.prototype.hasOwnProperty.call(options[0], 'key')
            ? renderOptGroups(options)
            : renderOptions(options);
    return (React.createElement(SelectBase, __assign({ defaultValue: defaultValue ? defaultValue.toString() : undefined, value: defaultValue ? undefined : value, borderColor: "palette.charcoal300" }, props, { ref: ref }),
        includeBlank && React.createElement("option", { value: "" }, placeholder),
        optionElements));
});
SelectComponent.displayName = 'SelectComponent';
var indicatorRaw = "<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M7.41 8L12 12.58L16.59 8L18 9.41L12 15.41L6 9.41L7.41 8Z\" fill=\"#1C2125\"/>\n</svg>";
var indicatorSize = '1rem';
var indicatorPadding = '.25rem';
var indicator = function (color) {
    return typeof window !== 'undefined' &&
        window.btoa(indicatorRaw.replace('#1C2125', color));
};
var SelectBase = styled.select.attrs(function (props) { return ({
    borderRadius: props.borderRadius || CustomizableSelectAttributes.borderRadius,
    fontSize: props.fontSize || CustomizableSelectAttributes.fontSize,
    height: props.py || props.p ? undefined : CustomizableSelectAttributes.height,
    px: props.p || CustomizableSelectAttributes.px,
    py: props.p || CustomizableSelectAttributes.py,
}); }).withConfig({ displayName: "SelectBase", componentId: "sc-n7e9mo" })(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  ", "\n  background-color: ", ";\n  border: solid 1px;\n\n  appearance: none;\n\n  background-image:\n    url(data:image/svg+xml;base64,\n    ", "),\n    linear-gradient(to bottom, ", " 0%, ", " 100%);\n\n  background-repeat: no-repeat, repeat;\n  background-position: right ", " center, 0 0;\n  background-size: ", ", 100%;\n\n  &::-ms-expand {\n    display: none;\n  }\n  ", "\n  ", "\n  ", "\n  ", "\n  padding-right: calc(2 * ", " + ", ");\n"], ["\n  ", "\n  background-color: ",
    ";\n  border: solid 1px;\n\n  appearance: none;\n\n  background-image:\n    url(data:image/svg+xml;base64,\n    ", "),\n    linear-gradient(to bottom, ",
    " 0%, ",
    " 100%);\n\n  background-repeat: no-repeat, repeat;\n  background-position: right ", " center, 0 0;\n  background-size: ", ", 100%;\n\n  &::-ms-expand {\n    display: none;\n  }\n  ", "\n  ", "\n  ", "\n  ", "\n  padding-right: calc(2 * ", " + ", ");\n"])), reset, function (props) {
    return props.validationType === 'error'
        ? props.theme.colors.palette.red000
        : props.theme.colors.palette.white;
}, function (props) { return indicator(props.theme.colors.palette.charcoal500); }, function (props) {
    return props.theme.colors.palette.white;
}, function (props) {
    return props.theme.colors.palette.white;
}, indicatorPadding, indicatorSize, border, layout, typography, space, indicatorPadding, indicatorSize);
export var Select = styled(SelectComponent).withConfig({ displayName: "Select", componentId: "sc-19085z1" })(templateObject_2 || (templateObject_2 = __makeTemplateObject([""], [""])));
var templateObject_1, templateObject_2;
//# sourceMappingURL=Select.js.map