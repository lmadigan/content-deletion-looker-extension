var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
import React from 'react';
import styled from 'styled-components';
import { palette } from '@looker/design-tokens';
import { Box } from '../../../Layout/Box';
import { IconButton } from '../../../Button';
import { Text } from '../../../Text';
export var InputSearchControls = function (_a) {
    var onClear = _a.onClear, showClear = _a.showClear, summary = _a.summary;
    var clear = (React.createElement(FadeIconButton, { color: "neutral", size: "xsmall", icon: "Close", pr: "xsmall", label: "Clear Filter", show: showClear, onClick: onClear }));
    var separator = (React.createElement(Box, { style: {
            borderRight: "1px solid " + palette.charcoal200,
            pointerEvents: 'none',
        }, height: "1.5rem" }));
    return (React.createElement(Box, { mx: "xxsmall", height: "100%", display: "flex", alignItems: "center" },
        summary && (React.createElement(Text, { pr: "xsmall", variant: "subdued", fontSize: "small", style: { pointerEvents: 'none', whiteSpace: 'nowrap' } }, summary)),
        summary && clear && separator,
        clear));
};
var FadeIconButton = styled(IconButton).withConfig({ displayName: "FadeIconButton", componentId: "sc-5a33bt" })(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  opacity: ", ";\n  transition: ", ";\n"], ["\n  opacity: ", ";\n  transition: ",
    ";\n"])), function (props) { return (props.show ? 1 : 0); }, function (props) {
    return "opacity " + props.theme.transitions.durationModerate + " " + props.theme.easings.ease + ";";
});
var templateObject_1;
//# sourceMappingURL=InputSearchControls.js.map