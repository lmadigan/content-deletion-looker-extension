var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
import styled from 'styled-components';
import { color, layout, reset, space, textTransform, typography, } from '@looker/design-tokens';
export var CustomizableLegendAttributes = {
    bottomPadding: 'xsmall',
    color: 'palette.charcoal800',
    fontSize: 'xxxlarge',
    fontWeight: 'light',
};
export var Legend = styled.legend.attrs(function (props) { return ({
    color: props.color || CustomizableLegendAttributes.color,
    fontSize: props.fontSize || CustomizableLegendAttributes.fontSize,
    fontWeight: props.fontWeight || CustomizableLegendAttributes.fontWeight,
    pb: props.pb || props.py || props.p
        ? undefined
        : CustomizableLegendAttributes.bottomPadding,
}); }).withConfig({ displayName: "Legend", componentId: "sc-oh7l4v" })(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  ", "\n  ", "\n  ", "\n  ", "\n  ", ";\n  ", "\n"], ["\n  ", "\n  ", "\n  ", "\n  ", "\n  ", ";\n  ", "\n"])), reset, color, layout, space, textTransform, typography);
var templateObject_1;
//# sourceMappingURL=Legend.js.map