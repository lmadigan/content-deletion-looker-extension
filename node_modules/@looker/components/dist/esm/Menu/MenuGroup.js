var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React from 'react';
import styled from 'styled-components';
import { color, reset, space, } from '@looker/design-tokens';
import { List } from '../List';
import { MenuGroupLabel } from './MenuGroupLabel';
import { cloneMenuListChildren } from './MenuList';
var MenuGroupInternal = function (_a) {
    var children = _a.children, label = _a.label, labelProps = _a.labelProps, labelStyles = _a.labelStyles, props = __rest(_a, ["children", "label", "labelProps", "labelStyles"]);
    var customizationProps = props.customizationProps, compact = props.compact, boxProps = __rest(props, ["customizationProps", "compact"]);
    var clonedChildren = cloneMenuListChildren(children, {
        compact: compact,
        customizationProps: customizationProps,
    });
    return (React.createElement(MenuGroupWrapper, __assign({}, boxProps, { backgroundColor: customizationProps && customizationProps.bg, py: "small" }),
        label && (React.createElement(MenuGroupLabel, __assign({ backgroundColor: customizationProps && customizationProps.bg, labelStyles: labelStyles, labelContent: label }, labelProps))),
        React.createElement(List, { nomarker: true }, clonedChildren)));
};
var MenuGroupWrapper = styled.li.withConfig({ displayName: "MenuGroupWrapper", componentId: "sc-1bz76uo" })(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  ", "\n  ", "\n  ", "\n"], ["\n  ", "\n  ", "\n  ", "\n"])), reset, space, color);
export var MenuGroup = styled(MenuGroupInternal).withConfig({ displayName: "MenuGroup", componentId: "sc-by1v24" })(templateObject_2 || (templateObject_2 = __makeTemplateObject([""], [""])));
var templateObject_1, templateObject_2;
//# sourceMappingURL=MenuGroup.js.map