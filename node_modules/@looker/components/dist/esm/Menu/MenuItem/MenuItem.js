var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React from 'react';
import { Icon } from '../../Icon';
import { MenuItemButton } from './MenuItemButton';
import { MenuItemDetail } from './MenuItemDetail';
import { MenuItemListItem } from './MenuItemListItem';
import { defaultMenuItemStyle, } from './menuItemStyle';
var assignCustomizations = function (defaultStyle, changes) {
    var _a = changes || {}, bg = _a.bg, color = _a.color, iconColor = _a.iconColor, fontWeight = _a.fontWeight, fontSize = _a.fontSize, iconSize = _a.iconSize;
    var customMarker = changes ? changes.marker : {};
    var defaults = {
        fontSize: fontSize || 'small',
        iconSize: iconSize || 20,
    };
    var base = {};
    bg && (base.bg = bg);
    color && (base.color = color);
    fontWeight && (base.fontWeight = fontWeight);
    iconColor && (base.iconColor = iconColor);
    var initial = __assign(__assign(__assign({}, defaultStyle.initial), defaults), base);
    var current = __assign(__assign(__assign(__assign({}, defaultStyle.current), defaults), base), (changes ? changes.current : {}));
    var hover = __assign(__assign(__assign(__assign({}, defaultStyle.hover), defaults), base), (changes ? changes.hover : {}));
    var marker = __assign(__assign({}, defaultStyle.marker), customMarker);
    return {
        current: current,
        hover: hover,
        initial: initial,
        marker: marker,
    };
};
export var MenuItem = function (props) {
    var current = props.current, children = props.children, detail = props.detail, icon = props.icon, customizationProps = props.customizationProps, onClick = props.onClick, itemRole = props.itemRole, href = props.href, target = props.target, compact = props.compact, remainingProps = __rest(props, ["current", "children", "detail", "icon", "customizationProps", "onClick", "itemRole", "href", "target", "compact"]);
    var compactIconModifier = compact ? 1.25 : 1;
    var style = assignCustomizations(defaultMenuItemStyle, customizationProps);
    var styleState = current ? style.current : style.initial;
    var iconSize = styleState.iconSize, iconColor = styleState.iconColor, listItemProps = __rest(styleState, ["iconSize", "iconColor"]);
    var p = remainingProps.p, py = remainingProps.py, px = remainingProps.px, pr = remainingProps.pr, pl = remainingProps.pl, pt = remainingProps.pt, pb = remainingProps.pb, outerProps = __rest(remainingProps, ["p", "py", "px", "pr", "pl", "pt", "pb"]);
    var clickTargetProps = {
        p: p,
        pb: pb || py || p || compact ? 'xxsmall' : 'small',
        pl: pl || px || p || 'medium',
        pr: pr || px || p || 'medium',
        pt: pt || py || p || compact ? 'xxsmall' : 'small',
    };
    return (React.createElement(MenuItemListItem, __assign({ current: current, itemStyle: style, "aria-current": current && 'page', onClick: onClick }, listItemProps, outerProps),
        React.createElement(MenuItemButton, __assign({ as: itemRole === 'link' ? 'a' : 'button', role: "menuitem", href: href, target: target }, clickTargetProps),
            icon && (React.createElement(Icon, { name: icon, mr: "xsmall", size: iconSize / compactIconModifier, color: iconColor })),
            children),
        detail && React.createElement(MenuItemDetail, null, detail)));
};
//# sourceMappingURL=MenuItem.js.map