import { useEffect, useState } from 'react';
export var useElementVisibility = function (ref) {
    var _a = useState(true), isVisible = _a[0], setIsVisible = _a[1];
    var observer = typeof IntersectionObserver === 'undefined'
        ? null
        : new IntersectionObserver(function (_a) {
            var entry = _a[0];
            setIsVisible(entry.intersectionRatio > 0);
        }, {
            threshold: [0, 1],
        });
    useEffect(function () {
        var refCurrent = ref.current;
        if (refCurrent) {
            observer && observer.observe(refCurrent);
        }
        return function () {
            if (refCurrent) {
                observer && observer.unobserve(refCurrent);
            }
        };
    }, [observer, ref]);
    return isVisible;
};
//# sourceMappingURL=MenuGroup.hooks.js.map