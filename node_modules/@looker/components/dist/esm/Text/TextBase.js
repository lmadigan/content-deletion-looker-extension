var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
import styled from 'styled-components';
import { color, reset, typography, space, textDecoration, } from '@looker/design-tokens';
export var TextBase = styled.span.attrs(function (props) { return ({
    lineHeight: props.lineHeight || props.fontSize,
}); }).withConfig({ displayName: "TextBase", componentId: "sc-1rkc9wq" })(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  ", "\n  ", "\n  ", "\n  ", "\n  ", "\n  ", ";\n"], ["\n  ", "\n  ", "\n  ", "\n  ", "\n  ", "\n  ", ";\n"])), reset, typography, space, color, textDecoration, function (props) { return props.wrap && 'overflow-wrap: break-word'; });
var templateObject_1;
//# sourceMappingURL=TextBase.js.map