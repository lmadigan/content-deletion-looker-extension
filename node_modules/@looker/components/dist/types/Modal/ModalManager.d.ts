import { Placement } from 'popper.js';
import { Component, ReactNode, RefObject, SyntheticEvent } from 'react';
import { ManagedModalProps } from '../Modal';
export interface ModalManagerProps extends ManagedModalProps {
    children: (onClick: () => void, ref: RefObject<any>) => ReactNode;
    content: ReactNode;
    canClose?: () => boolean;
    placement?: Placement;
    isOpen?: boolean;
    stopPropagation?: boolean;
}
export interface ModalManagerState {
    isOpen: boolean;
}
export declare abstract class ModalManager extends Component<ModalManagerProps, ModalManagerState> {
    protected portalRef: RefObject<HTMLDivElement>;
    protected triggerRef: RefObject<any>;
    constructor(props: ModalManagerProps);
    componentDidMount(): void;
    render(): JSX.Element;
    open(event?: SyntheticEvent): void;
    close(): void;
    protected abstract renderModal(content: ReactNode, props: ManagedModalProps): ReactNode;
}
