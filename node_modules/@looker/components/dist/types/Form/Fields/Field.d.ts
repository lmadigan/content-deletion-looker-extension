import { WidthProperty } from 'csstype';
import React from 'react';
import { ResponsiveValue, TLengthStyledSystem } from 'styled-system';
import { CustomizableAttributes, FontSizes, FontWeights, SpacingSizes } from '@looker/design-tokens';
import { FormControlDirections } from '../FormControl/FormControl';
import { ValidationMessageProps } from '../ValidationMessage/ValidationMessage';
declare type ResponsiveSpaceValue = ResponsiveValue<TLengthStyledSystem>;
export interface CustomizableFieldAttributesInterface extends CustomizableAttributes {
    labelMargin: SpacingSizes;
    labelWidth: ResponsiveValue<WidthProperty<TLengthStyledSystem>>;
}
export declare const CustomizableFieldAttributes: CustomizableFieldAttributesInterface;
export interface FieldProps {
    alignLabel?: FormControlDirections;
    alignValidationMessage?: FormControlDirections;
    id?: string;
    label?: string;
    labelWidth?: ResponsiveSpaceValue;
    labelFontSize?: FontSizes;
    labelFontWeight?: FontWeights;
    required?: boolean;
    validationMessage?: ValidationMessageProps;
}
export declare const fieldPropKeys: string[];
export declare const pickFieldProps: (props: FieldProps) => Partial<FieldProps>;
export declare const omitFieldProps: (props: FieldProps) => Partial<FieldProps>;
export declare const Field: import("styled-components").StyledComponent<React.FunctionComponent<FieldProps>, any, {}, never>;
export {};
