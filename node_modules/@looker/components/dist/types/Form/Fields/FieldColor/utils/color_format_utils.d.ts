import * as d3color from 'd3-color';
import * as d3hsv from 'd3-hsv';
import { SimpleHSV } from '../ColorWheel/color_wheel_utils';
export declare enum ColorFormat {
    NAME = 0,
    HEX3 = 1,
    HEX6 = 2,
    RGBI = 3,
    RGBIA = 4,
    RGBP = 5,
    RGBPA = 6,
    HSL = 7,
    HSLA = 8,
    TRANSPARENT = 9,
    BAD = 10
}
export declare const getFormat: (value: string) => string;
export declare const getOpacity: (color: d3color.Color) => number;
export declare const toColorName: (color: d3color.RGBColor | d3color.HSLColor, opacity?: number | null) => string;
export declare const toRGBIString: (color: d3color.RGBColor | d3color.HSLColor, opacity?: number | null, useAlpha?: boolean) => string;
export declare const toRGBPString: (color: d3color.RGBColor | d3color.HSLColor, opacity?: number | null, useAlpha?: boolean) => string;
export declare const toHSLString: (color: d3color.RGBColor | d3color.HSLColor, opacity?: number | null, useAlpha?: boolean) => string;
export declare const toFormattedColorString: (value: string, format?: ColorFormat | null) => string;
export declare const toHSV: (value: string) => d3hsv.HSVColor | null;
export declare const hsvToColorString: (hsvColor: d3hsv.HSVColor, format?: ColorFormat | null) => string;
export declare const hsv2hex: (color: SimpleHSV) => string;
export declare const str2simpleHsv: (color: string) => SimpleHSV;
export declare const simpleHSVtoRGB: (color: SimpleHSV) => d3color.RGBColor;
export declare const simpleHSVtoFormattedColorString: (color: SimpleHSV, colorFormat?: string | undefined) => string;
