import React from 'react';
import { BorderProps, CompatibleHTMLProps, CustomizableAttributes, LayoutProps, SpaceProps, TypographyProps } from '@looker/design-tokens';
import { ValidationType } from '../../ValidationMessage';
export declare const CustomizableSelectAttributes: CustomizableAttributes;
export declare type OptionsType<OptionType> = OptionType[];
export interface GroupType<OptionType> {
    options: OptionsType<OptionType>;
    [key: string]: any;
}
export declare type GroupedOptionsType<UnionOptionType> = Array<GroupType<UnionOptionType>>;
export interface SelectOptionProps {
    label: string;
    value: string;
}
export interface SelectProps extends BorderProps, Omit<LayoutProps, 'size'>, SpaceProps, TypographyProps, CompatibleHTMLProps<HTMLSelectElement> {
    options?: OptionsType<SelectOptionProps> | GroupedOptionsType<SelectOptionProps>;
    includeBlank?: boolean;
    placeholder?: string;
    validationType?: ValidationType;
}
export declare const Select: import("styled-components").StyledComponent<React.ForwardRefExoticComponent<SelectProps & React.RefAttributes<HTMLSelectElement>>, any, {}, never>;
