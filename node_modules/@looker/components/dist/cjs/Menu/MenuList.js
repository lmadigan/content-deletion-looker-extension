"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var merge_1 = __importDefault(require("lodash/merge"));
var react_1 = __importStar(require("react"));
var react_hotkeys_1 = require("react-hotkeys");
var styled_components_1 = __importStar(require("styled-components"));
var styled_system_1 = require("styled-system");
var design_tokens_1 = require("@looker/design-tokens");
var Popover_1 = require("../Popover");
var MenuGroup_1 = require("./MenuGroup");
var moveFocus_1 = require("./moveFocus");
function cloneMenuListChildren(children, _a) {
    var parentCustomizations = _a.customizationProps, compact = _a.compact;
    return react_1.Children.map(children, function (child) {
        if (!child || typeof child.type === 'string')
            return child;
        var childCustomizations = child.props.customizationProps;
        var customizationProps = parentCustomizations || childCustomizations;
        if (childCustomizations && parentCustomizations) {
            customizationProps = merge_1.default({}, parentCustomizations, childCustomizations);
        }
        return react_1.cloneElement(child, { compact: compact, customizationProps: customizationProps });
    });
}
exports.cloneMenuListChildren = cloneMenuListChildren;
exports.MenuListInternal = react_1.forwardRef(function (props, ref) {
    var children = props.children, className = props.className, compact = props.compact, customizationProps = props.customizationProps, disabled = props.disabled, isOpen = props.isOpen, pin = props.pin, placement = props.placement, setOpen = props.setOpen, triggerRef = props.triggerRef;
    var innerRef = react_1.useRef(null);
    var clonedChildren = cloneMenuListChildren(children, {
        compact: compact,
        customizationProps: customizationProps,
    });
    var menuList = (react_1.default.createElement(react_hotkeys_1.HotKeys, { innerRef: innerRef, keyMap: { MOVE_DOWN: 'down', MOVE_UP: 'up' }, handlers: {
            MOVE_DOWN: function () { return moveFocus_1.moveFocus(1, 0, innerRef); },
            MOVE_UP: function () { return moveFocus_1.moveFocus(-1, -1, innerRef); },
        } },
        react_1.default.createElement("ul", { className: className, ref: ref, tabIndex: -1, role: "menu" }, clonedChildren)));
    var isMenu = isOpen !== undefined;
    var popover = Popover_1.usePopover({
        content: menuList,
        isOpen: isOpen,
        pin: pin,
        placement: placement,
        setOpen: setOpen,
        triggerRef: triggerRef,
    }).popover;
    if (disabled)
        return null;
    if (isMenu)
        return popover || null;
    return menuList;
});
var dividersStyle = styled_components_1.css(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  ", " ~ ", " { /* stylelint-disable-line */\n    border-top: 1px solid ", ";\n  }\n"], ["\n  ", " ~ ", " { /* stylelint-disable-line */\n    border-top: 1px solid ", ";\n  }\n"])), MenuGroup_1.MenuGroup, MenuGroup_1.MenuGroup, function (props) { return props.theme.colors.palette.charcoal200; });
exports.MenuList = styled_components_1.default(exports.MenuListInternal).withConfig({ displayName: "MenuList", componentId: "sc-cfvd7z" })(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  ", "\n\n  ", "\n  ", "\n  ", "\n\n  ", "\n  ", "\n  ", "\n\n  overflow: auto;\n\n  list-style: none;\n  outline: none;\n  user-select: none;\n  ", ";\n"], ["\n  ", "\n\n  ", "\n  ", "\n  ", "\n\n  ", "\n  ", "\n  ", "\n\n  overflow: auto;\n\n  list-style: none;\n  outline: none;\n  user-select: none;\n  ", ";\n"])), design_tokens_1.reset, styled_system_1.minHeight, styled_system_1.maxHeight, styled_system_1.height, styled_system_1.minWidth, styled_system_1.maxWidth, styled_system_1.width, function (props) { return props.groupDividers !== false && dividersStyle; });
exports.MenuList.defaultProps = { minWidth: '12rem' };
var templateObject_1, templateObject_2;
//# sourceMappingURL=MenuList.js.map