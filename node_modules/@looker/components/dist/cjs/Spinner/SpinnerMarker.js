"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var design_tokens_1 = require("@looker/design-tokens");
var styled_components_1 = __importStar(require("styled-components"));
var styled_system_1 = require("styled-system");
var markerStyle = function (props) {
    var markerIndex = props.markerIndex, markerRadius = props.markerRadius, markers = props.markers, speed = props.speed;
    var delay = (markerIndex * speed) / markers;
    var rotateAngle = (360 / markers) * markerIndex;
    return styled_components_1.css(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n    animation: ", " ", "ms linear ", "ms infinite;\n    border-radius: ", ";\n    transform: rotate(", "deg) translate(0, -160%);\n  "], ["\n    animation: ", " ", "ms linear ", "ms infinite;\n    border-radius: ", ";\n    transform: rotate(", "deg) translate(0, -160%);\n  "])), design_tokens_1.quarterFade, speed, delay, markerRadius && markerRadius + "px", rotateAngle);
};
exports.SpinnerMarker = styled_components_1.default.div.withConfig({ displayName: "SpinnerMarker", componentId: "sc-1p82r38" })(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  ", "\n  ", "\n  height: 20%;\n  left: 48%;\n  opacity: 0.25;\n  position: absolute;\n  top: 40%;\n  width: 6%;\n"], ["\n  ", "\n  ", "\n  height: 20%;\n  left: 48%;\n  opacity: 0.25;\n  position: absolute;\n  top: 40%;\n  width: 6%;\n"])), styled_system_1.color, markerStyle);
var templateObject_1, templateObject_2;
//# sourceMappingURL=SpinnerMarker.js.map