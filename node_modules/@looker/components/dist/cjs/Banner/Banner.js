"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importStar(require("react"));
var Button_1 = require("../Button");
var Icon_1 = require("../Icon");
var Flex_1 = require("../Layout/Flex");
var VisuallyHidden_1 = require("../VisuallyHidden");
var getBannerIntentStyling = function (intent) {
    var bannerTypeStyling = {};
    switch (intent) {
        case 'warning':
            bannerTypeStyling.bg = 'palette.yellow100';
            bannerTypeStyling.icon = (react_1.default.createElement(Icon_1.Icon, { mr: "small", size: 20, name: "Warning", color: "palette.yellow500" }));
            bannerTypeStyling.accessibilityLabel = 'Warning';
            break;
        case 'info':
            bannerTypeStyling.bg = 'palette.blue100';
            bannerTypeStyling.icon = (react_1.default.createElement(Icon_1.Icon, { mr: "small", size: 20, name: "CircleInfo", color: "palette.blue400" }));
            bannerTypeStyling.accessibilityLabel = 'Info';
            break;
        case 'error':
            bannerTypeStyling.bg = 'palette.red100';
            bannerTypeStyling.icon = (react_1.default.createElement(Icon_1.Icon, { mr: "small", size: 20, name: "Warning", color: "palette.red600" }));
            bannerTypeStyling.accessibilityLabel = 'Error';
            break;
        case 'confirmation':
            bannerTypeStyling.bg = 'palette.green100';
            break;
        default:
            break;
    }
    return bannerTypeStyling;
};
exports.Banner = react_1.forwardRef(function (props, ref) {
    var children = props.children, dismissable = props.dismissable, _a = props.intent, intent = _a === void 0 ? 'warning' : _a, onDismiss = props.onDismiss, typeAndSpaceProps = __rest(props, ["children", "dismissable", "intent", "onDismiss"]);
    var _b = getBannerIntentStyling(intent), icon = _b.icon, accessibilityLabel = _b.accessibilityLabel, bannerIntentStyling = __rest(_b, ["icon", "accessibilityLabel"]);
    return (react_1.default.createElement(Flex_1.Flex, __assign({ ref: ref }, bannerIntentStyling, { borderRadius: "medium", m: "small", py: "xsmall", px: "small", alignItems: "center", "aria-live": "polite", role: "status" }, typeAndSpaceProps),
        icon,
        react_1.default.createElement(VisuallyHidden_1.VisuallyHidden, null, accessibilityLabel),
        react_1.default.createElement("div", null, children),
        dismissable && (react_1.default.createElement(Button_1.IconButton, { ml: "auto", style: { padding: '1px' }, onClick: onDismiss, hoverStyle: { background: 'none' }, icon: "Close", size: "small", label: "Dismiss", "aria-hidden": true, color: "neutral" }))));
});
exports.Banner.defaultProps = { intent: 'info' };
exports.Banner.displayName = 'Banner';
//# sourceMappingURL=Banner.js.map