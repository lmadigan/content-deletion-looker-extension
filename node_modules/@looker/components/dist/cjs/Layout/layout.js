"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
Object.defineProperty(exports, "__esModule", { value: true });
var design_tokens_1 = require("@looker/design-tokens");
var styled_components_1 = require("styled-components");
exports.layoutCSS = styled_components_1.css(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  /**\n   * Rules here should provide convenience styling for Box derived components.\n   * Generally anything here could be overwritten by explicit values set via\n   * Box's prop values. For example a function here that sets 'cursor: pointer'\n   * would be overwritten by an explicit <Box cursor='copy'/>.\n   */\n  ", "\n\n  /**\n   * Style Utilities that extend Box's props. Most of these come from\n   * styled-system but some are Looker UI Components specific.\n   *\n   * These should be last to override rules with lower priority.\n   */\n  ", "\n  ", "\n  ", "\n  ", "\n  ", "\n  ", "\n  ", "\n"], ["\n  /**\n   * Rules here should provide convenience styling for Box derived components.\n   * Generally anything here could be overwritten by explicit values set via\n   * Box's prop values. For example a function here that sets 'cursor: pointer'\n   * would be overwritten by an explicit <Box cursor='copy'/>.\n   */\n  ", "\n\n  /**\n   * Style Utilities that extend Box's props. Most of these come from\n   * styled-system but some are Looker UI Components specific.\n   *\n   * These should be last to override rules with lower priority.\n   */\n  ", "\n  ", "\n  ", "\n  ", "\n  ", "\n  ", "\n  ", "\n"])), design_tokens_1.reset, design_tokens_1.border, design_tokens_1.boxShadow, design_tokens_1.color, design_tokens_1.layout, design_tokens_1.position, design_tokens_1.space, design_tokens_1.typography);
var templateObject_1;
//# sourceMappingURL=layout.js.map