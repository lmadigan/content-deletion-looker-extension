"use strict";
/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2019 Looker Data Sciences, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(require("./rtl/apiMethods"));
__export(require("./rtl/apiSettings"));
__export(require("./rtl/authToken"));
__export(require("./rtl/browserSdk"));
__export(require("./rtl/browserSession"));
__export(require("./rtl/browserTransport"));
__export(require("./rtl/nodeSdk"));
__export(require("./rtl/nodeSession"));
__export(require("./rtl/nodeSettings"));
__export(require("./rtl/nodeTransport"));
__export(require("./rtl/transport"));
__export(require("./rtl/constants"));
__export(require("./sdk/methods"));
var methods_1 = require("./sdk/methods");
/**
 * @class SDK
 *
 * Simple factory for the Typescript version of the Looker SDK. Provides default connectivity for SDK methods
 *
 */
var SDK = /** @class */ (function () {
    function SDK() {
    }
    /**
     * Creates an [[LookerSDK]] object.
     *
     * @param session {IAuthSession} SDK session manager to use
     */
    SDK.createClient = function (session) {
        return new methods_1.LookerSDK(session);
    };
    return SDK;
}());
exports.SDK = SDK;
