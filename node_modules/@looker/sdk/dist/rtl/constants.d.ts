export declare const lookerVersion = "6.25";
export declare const apiVersion = "3.1";
export declare const sdkVersion: string;
export declare const environmentPrefix = "LOOKERSDK";
export declare const matchCharset = ";.*\bcharset\b=";
export declare const utf8 = "utf-8";
/**
 * Does this content type say it's utf-8?
 * @type {string} Regular expression for matching charset=utf-8 in Content-Type
 */
export declare const matchCharsetUtf8: string;
/**
 * Matching rules for string/text types. String matches must be checked *before* binary matches
 * @type {string} Regular expression for matching Content-Type headers
 */
export declare const matchModeString: string;
/**
 * Matching rules for all binary or unknown types. Binary matches must be checked *after* string matches
 * @type {string} Regular expression for matching Content-Type headers
 */
export declare const matchModeBinary = "^image\\/|^audio\\/|^video\\/|^font\\/|^application\\/|^multipart\\/";
/**
 * Does this string mean "true"
 * @param {string} value
 * @returns {boolean} true if matching a `true` value, false otherwise
 */
export declare const isTrue: (value: string) => boolean;
/**
 * Does this string mean "false"
 * @param {string} value
 * @returns {boolean} true if matching a `false` value, false otherwise
 */
export declare const isFalse: (value: string) => boolean;
/**
 * Return true, false, or default boolean value for string representation of boolean
 * @param {string} value
 * @param {boolean} defaultBool is the value to return if the string doesn't match. defaults to false.
 * @returns {boolean} true or false
 */
export declare const boolDefault: (value: string, defaultBool?: boolean) => boolean;
