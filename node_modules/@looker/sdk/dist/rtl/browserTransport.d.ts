import { SDKResponse, ITransportSettings, HttpMethod, Authenticator } from './transport';
import { Readable } from 'readable-stream';
import { BaseTransport } from './baseTransport';
export declare class BrowserTransport extends BaseTransport {
    protected readonly options: ITransportSettings;
    constructor(options: ITransportSettings);
    request<TSuccess, TError>(method: HttpMethod, path: string, queryParams?: any, body?: any, authenticator?: Authenticator, options?: Partial<ITransportSettings>): Promise<SDKResponse<TSuccess, TError>>;
    private initRequest;
    stream<TSuccess>(callback: (readable: Readable) => Promise<TSuccess>, method: HttpMethod, path: string, queryParams?: any, body?: any, authenticator?: Authenticator, options?: Partial<ITransportSettings>): Promise<TSuccess>;
}
