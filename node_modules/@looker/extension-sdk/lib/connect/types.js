"use strict";
/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2019 Looker Data Sciences, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Extension event used for chatty communication
 */
var ExtensionEvent;
(function (ExtensionEvent) {
    /**
     * Notification from host to client
     */
    ExtensionEvent["EXTENSION_HOST_NOTIFICATION"] = "EXTENSION_NOTIFICATION";
    /**
     * Process request from client. This is actually a sendAndRecieve request
     */
    ExtensionEvent["EXTENSION_API_REQUEST"] = "EXTENSION_API_REQUEST";
})(ExtensionEvent = exports.ExtensionEvent || (exports.ExtensionEvent = {}));
/**
 * Request types used by the underlying API. The ENTENSION_API_REQUEST delegates
 * work based upon the request type
 */
var ExtensionRequestType;
(function (ExtensionRequestType) {
    /**
     * Verify that the host exists and is working correctly. Host is the Looker window
     * instance that owns the client IFRAME.
     */
    ExtensionRequestType["VERIFY_HOST"] = "VERIFY_HOST";
    /**
     * Execute a call on the Looker CORE SDK
     */
    ExtensionRequestType["INVOKE_CORE_SDK"] = "INVOKE_CORE_SDK";
    /**
     * Update title
     */
    ExtensionRequestType["UPDATE_TITLE"] = "UPDATE_TITLE";
    /**
     * Update location
     */
    ExtensionRequestType["UPDATE_LOCATION"] = "UPDATE_LOCATION";
    /**
     * Location route changed
     */
    ExtensionRequestType["ROUTE_CHANGED"] = "ROUTE_CHANGED";
    /**
     * Close popovers in the looker host
     */
    ExtensionRequestType["CLOSE_HOST_POPOVERS"] = "CLOSE_HOST_POPOVERS";
})(ExtensionRequestType = exports.ExtensionRequestType || (exports.ExtensionRequestType = {}));
/**
 * Notification type
 */
var ExtensionNotificationType;
(function (ExtensionNotificationType) {
    /**
     * Initialize message sent when chatty host and client have established
     * communication
     */
    ExtensionNotificationType["INITIALIZE"] = "INITIALIZE";
})(ExtensionNotificationType = exports.ExtensionNotificationType || (exports.ExtensionNotificationType = {}));
